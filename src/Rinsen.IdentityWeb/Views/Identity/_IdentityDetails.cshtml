@model Rinsen.IdentityWeb.Models.IdentityModel
<div class="row">
    <div class="col-md-12">
        <div class="row">
            <div class="col-md-10">
                <h1>Identity details</h1>
            </div>
            <div class="col-md-2">
                <div class="pull-right">@Html.ActionLink("Logout", "Logout")</div>
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="col-md-1"><strong>Name</strong></div>
            <div class="col-md-11">@Model.IdentityDetailsModel.FirstName @Model.IdentityDetailsModel.LastName</div>
        </div>
        <div class="row">
            <div class="col-md-1"><strong>Email</strong></div>
            <div class="col-md-11">@Model.IdentityDetailsModel.Email</div>
        </div>
        @if (!string.IsNullOrEmpty(Model.IdentityDetailsModel.PhoneNumber))
        {
            <div class="row">
                <div class="col-md-1"><strong>Phone number</strong></div>
                <div class="col-md-11">@Model.IdentityDetailsModel.PhoneNumber</div>
            </div>
        }
        
        <h2>Change password</h2>

        @if (Model.ChangePasswordModel.PasswordUpdateSucceeded)
        {
            <p>Password is changed</p>
        }
        @using (Html.BeginForm("ChangePassword", "Identity"))
        {
            <div class="form-horizontal @(Model.ChangePasswordModel.InvalidCurrentPassword ? "has-error" : "")">
                @Html.AntiForgeryToken()
                <div class="form-group">
                    @Html.LabelFor(m => m.ChangePasswordModel.CurrentPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.ChangePasswordModel.CurrentPassword, new { @type = "password", @class = "form-control" })
                        @Html.ValidationMessageFor(model => Model.ChangePasswordModel.CurrentPassword, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.ChangePasswordModel.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.ChangePasswordModel.Password, new { @type = "password", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ChangePasswordModel.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.ChangePasswordModel.PasswordRepeated, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.ChangePasswordModel.PasswordRepeated, new { @type = "password", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ChangePasswordModel.PasswordRepeated, "", new { @class = "text-danger" })
                    </div>
                </div>
                @if (Model.ChangePasswordModel.InvalidCurrentPassword)
                {
                    <div class="col-md-2"></div>
                    <div class="col-md-10">
                        <span class="help-block">Current pasword is incorrect</span>
                    </div>
                }
                <div class="col-md-2"></div>
                <div class="col-md-1">
                    <button type="submit" class="btn btn-default">Change password</button>
                </div>
                <div class="col-md-9"></div>
            </div>
        }
    </div>
</div>

